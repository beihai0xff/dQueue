// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: pudding/trigger/v1/cron_trigger.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TriggerStatus int32

const (
	// TRIGGER_STATUS_UNKNOWN_UNSPECIFIED is unknown, do not use it
	TriggerStatus_TRIGGER_STATUS_UNKNOWN_UNSPECIFIED TriggerStatus = 0
	// TRIGGER_STATUS_ENABLED is the status of trigger which is enabled
	TriggerStatus_TRIGGER_STATUS_ENABLED TriggerStatus = 1
	// TRIGGER_STATUS_DISABLED is the status of trigger disabled.
	TriggerStatus_TRIGGER_STATUS_DISABLED TriggerStatus = 2
	// TRIGGER_STATUS_MAX_TIMES the trigger loop times exceeds the maximum times limit.
	TriggerStatus_TRIGGER_STATUS_MAX_TIMES TriggerStatus = 3
	// TRIGGER_STATUS_MAX_AGE the trigger exceeds the maximum age limit.
	TriggerStatus_TRIGGER_STATUS_MAX_AGE TriggerStatus = 4
)

// Enum value maps for TriggerStatus.
var (
	TriggerStatus_name = map[int32]string{
		0: "TRIGGER_STATUS_UNKNOWN_UNSPECIFIED",
		1: "TRIGGER_STATUS_ENABLED",
		2: "TRIGGER_STATUS_DISABLED",
		3: "TRIGGER_STATUS_MAX_TIMES",
		4: "TRIGGER_STATUS_MAX_AGE",
	}
	TriggerStatus_value = map[string]int32{
		"TRIGGER_STATUS_UNKNOWN_UNSPECIFIED": 0,
		"TRIGGER_STATUS_ENABLED":             1,
		"TRIGGER_STATUS_DISABLED":            2,
		"TRIGGER_STATUS_MAX_TIMES":           3,
		"TRIGGER_STATUS_MAX_AGE":             4,
	}
)

func (x TriggerStatus) Enum() *TriggerStatus {
	p := new(TriggerStatus)
	*p = x
	return p
}

func (x TriggerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pudding_trigger_v1_cron_trigger_proto_enumTypes[0].Descriptor()
}

func (TriggerStatus) Type() protoreflect.EnumType {
	return &file_pudding_trigger_v1_cron_trigger_proto_enumTypes[0]
}

func (x TriggerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerStatus.Descriptor instead.
func (TriggerStatus) EnumDescriptor() ([]byte, []int) {
	return file_pudding_trigger_v1_cron_trigger_proto_rawDescGZIP(), []int{0}
}

// The Ping response message
type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_pudding_trigger_v1_cron_trigger_proto_rawDescGZIP(), []int{0}
}

func (x *PingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// The UpdateStatus request message.
type FindOneByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CronTrigger ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindOneByIDRequest) Reset() {
	*x = FindOneByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneByIDRequest) ProtoMessage() {}

func (x *FindOneByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneByIDRequest.ProtoReflect.Descriptor instead.
func (*FindOneByIDRequest) Descriptor() ([]byte, []int) {
	return file_pudding_trigger_v1_cron_trigger_proto_rawDescGZIP(), []int{1}
}

func (x *FindOneByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindOneByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Body    *CronTriggerTemplate `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *FindOneByIDResponse) Reset() {
	*x = FindOneByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneByIDResponse) ProtoMessage() {}

func (x *FindOneByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneByIDResponse.ProtoReflect.Descriptor instead.
func (*FindOneByIDResponse) Descriptor() ([]byte, []int) {
	return file_pudding_trigger_v1_cron_trigger_proto_rawDescGZIP(), []int{2}
}

func (x *FindOneByIDResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FindOneByIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FindOneByIDResponse) GetBody() *CronTriggerTemplate {
	if x != nil {
		return x.Body
	}
	return nil
}

// The UpdateStatus request message.
type PageQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *PageQueryRequest) Reset() {
	*x = PageQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageQueryRequest) ProtoMessage() {}

func (x *PageQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageQueryRequest.ProtoReflect.Descriptor instead.
func (*PageQueryRequest) Descriptor() ([]byte, []int) {
	return file_pudding_trigger_v1_cron_trigger_proto_rawDescGZIP(), []int{3}
}

func (x *PageQueryRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PageQueryRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type PageQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Total   uint32                 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Body    []*CronTriggerTemplate `protobuf:"bytes,4,rep,name=body,proto3" json:"body,omitempty"`
}

func (x *PageQueryResponse) Reset() {
	*x = PageQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageQueryResponse) ProtoMessage() {}

func (x *PageQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageQueryResponse.ProtoReflect.Descriptor instead.
func (*PageQueryResponse) Descriptor() ([]byte, []int) {
	return file_pudding_trigger_v1_cron_trigger_proto_rawDescGZIP(), []int{4}
}

func (x *PageQueryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PageQueryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PageQueryResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PageQueryResponse) GetBody() []*CronTriggerTemplate {
	if x != nil {
		return x.Body
	}
	return nil
}

// The UpdateStatus request message.
type UpdateStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CronTrigger ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// CronTrigger status
	Status TriggerStatus `protobuf:"varint,2,opt,name=status,proto3,enum=pudding.trigger.v1.TriggerStatus" json:"status,omitempty"`
}

func (x *UpdateStatusRequest) Reset() {
	*x = UpdateStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusRequest) ProtoMessage() {}

func (x *UpdateStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateStatusRequest) Descriptor() ([]byte, []int) {
	return file_pudding_trigger_v1_cron_trigger_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateStatusRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateStatusRequest) GetStatus() TriggerStatus {
	if x != nil {
		return x.Status
	}
	return TriggerStatus_TRIGGER_STATUS_UNKNOWN_UNSPECIFIED
}

type UpdateStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateStatusResponse) Reset() {
	*x = UpdateStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusResponse) ProtoMessage() {}

func (x *UpdateStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateStatusResponse) Descriptor() ([]byte, []int) {
	return file_pudding_trigger_v1_cron_trigger_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateStatusResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CronTriggerTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CronExpr          string                 `protobuf:"bytes,2,opt,name=cron_expr,json=cronExpr,proto3" json:"cron_expr,omitempty"`
	Topic             string                 `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	Payload           []byte                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	LastExecutionTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_execution_time,json=lastExecutionTime,proto3" json:"last_execution_time,omitempty"`
	ExceptedEndTime   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=excepted_end_time,json=exceptedEndTime,proto3" json:"excepted_end_time,omitempty"`
	LoopedTimes       uint64                 `protobuf:"varint,7,opt,name=looped_times,json=loopedTimes,proto3" json:"looped_times,omitempty"`
	Status            TriggerStatus          `protobuf:"varint,8,opt,name=status,proto3,enum=pudding.trigger.v1.TriggerStatus" json:"status,omitempty"`
}

func (x *CronTriggerTemplate) Reset() {
	*x = CronTriggerTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronTriggerTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronTriggerTemplate) ProtoMessage() {}

func (x *CronTriggerTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_pudding_trigger_v1_cron_trigger_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronTriggerTemplate.ProtoReflect.Descriptor instead.
func (*CronTriggerTemplate) Descriptor() ([]byte, []int) {
	return file_pudding_trigger_v1_cron_trigger_proto_rawDescGZIP(), []int{7}
}

func (x *CronTriggerTemplate) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CronTriggerTemplate) GetCronExpr() string {
	if x != nil {
		return x.CronExpr
	}
	return ""
}

func (x *CronTriggerTemplate) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *CronTriggerTemplate) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CronTriggerTemplate) GetLastExecutionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastExecutionTime
	}
	return nil
}

func (x *CronTriggerTemplate) GetExceptedEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExceptedEndTime
	}
	return nil
}

func (x *CronTriggerTemplate) GetLoopedTimes() uint64 {
	if x != nil {
		return x.LoopedTimes
	}
	return 0
}

func (x *CronTriggerTemplate) GetStatus() TriggerStatus {
	if x != nil {
		return x.Status
	}
	return TriggerStatus_TRIGGER_STATUS_UNKNOWN_UNSPECIFIED
}

var File_pudding_trigger_v1_cron_trigger_proto protoreflect.FileDescriptor

var file_pudding_trigger_v1_cron_trigger_proto_rawDesc = []byte{
	0x0a, 0x25, 0x70, 0x75, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x70, 0x75, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x24, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64,
	0x4f, 0x6e, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x75,
	0x64, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x40, 0x0a, 0x10, 0x50, 0x61,
	0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x94, 0x01, 0x0a,
	0x11, 0x50, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x75, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x22, 0x60, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x75, 0x64,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x44, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe4, 0x02, 0x0a, 0x13,
	0x43, 0x72, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x4a, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x11,
	0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x6f, 0x70, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x6f, 0x6f, 0x70,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x75, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2a, 0xaa, 0x01, 0x0a, 0x0d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x22, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16,
	0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45,
	0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x52, 0x49, 0x47,
	0x47, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42,
	0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x53, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x41, 0x47, 0x45, 0x10, 0x04, 0x32,
	0x9b, 0x03, 0x0a, 0x12, 0x43, 0x72, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x70, 0x75, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a,
	0x12, 0x18, 0x2f, 0x70, 0x75, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x60, 0x0a, 0x0b, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x26, 0x2e, 0x70, 0x75, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x70, 0x75, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x09,
	0x50, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x70, 0x75, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x70, 0x75, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x2e, 0x70, 0x75, 0x64, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x70, 0x75, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xbe, 0x01,
	0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x75, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x43, 0x72, 0x6f, 0x6e, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x28, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x65, 0x69, 0x68, 0x61, 0x69, 0x30,
	0x78, 0x66, 0x66, 0x2f, 0x70, 0x75, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x50, 0x54, 0x58, 0xaa, 0x02, 0x12, 0x50,
	0x75, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x12, 0x50, 0x75, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x5c, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e, 0x50, 0x75, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x5c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x50, 0x75, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x3a, 0x3a, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pudding_trigger_v1_cron_trigger_proto_rawDescOnce sync.Once
	file_pudding_trigger_v1_cron_trigger_proto_rawDescData = file_pudding_trigger_v1_cron_trigger_proto_rawDesc
)

func file_pudding_trigger_v1_cron_trigger_proto_rawDescGZIP() []byte {
	file_pudding_trigger_v1_cron_trigger_proto_rawDescOnce.Do(func() {
		file_pudding_trigger_v1_cron_trigger_proto_rawDescData = protoimpl.X.CompressGZIP(file_pudding_trigger_v1_cron_trigger_proto_rawDescData)
	})
	return file_pudding_trigger_v1_cron_trigger_proto_rawDescData
}

var file_pudding_trigger_v1_cron_trigger_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pudding_trigger_v1_cron_trigger_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pudding_trigger_v1_cron_trigger_proto_goTypes = []interface{}{
	(TriggerStatus)(0),            // 0: pudding.trigger.v1.TriggerStatus
	(*PingResponse)(nil),          // 1: pudding.trigger.v1.PingResponse
	(*FindOneByIDRequest)(nil),    // 2: pudding.trigger.v1.FindOneByIDRequest
	(*FindOneByIDResponse)(nil),   // 3: pudding.trigger.v1.FindOneByIDResponse
	(*PageQueryRequest)(nil),      // 4: pudding.trigger.v1.PageQueryRequest
	(*PageQueryResponse)(nil),     // 5: pudding.trigger.v1.PageQueryResponse
	(*UpdateStatusRequest)(nil),   // 6: pudding.trigger.v1.UpdateStatusRequest
	(*UpdateStatusResponse)(nil),  // 7: pudding.trigger.v1.UpdateStatusResponse
	(*CronTriggerTemplate)(nil),   // 8: pudding.trigger.v1.CronTriggerTemplate
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 10: google.protobuf.Empty
}
var file_pudding_trigger_v1_cron_trigger_proto_depIdxs = []int32{
	8,  // 0: pudding.trigger.v1.FindOneByIDResponse.body:type_name -> pudding.trigger.v1.CronTriggerTemplate
	8,  // 1: pudding.trigger.v1.PageQueryResponse.body:type_name -> pudding.trigger.v1.CronTriggerTemplate
	0,  // 2: pudding.trigger.v1.UpdateStatusRequest.status:type_name -> pudding.trigger.v1.TriggerStatus
	9,  // 3: pudding.trigger.v1.CronTriggerTemplate.last_execution_time:type_name -> google.protobuf.Timestamp
	9,  // 4: pudding.trigger.v1.CronTriggerTemplate.excepted_end_time:type_name -> google.protobuf.Timestamp
	0,  // 5: pudding.trigger.v1.CronTriggerTemplate.status:type_name -> pudding.trigger.v1.TriggerStatus
	10, // 6: pudding.trigger.v1.CronTriggerService.Ping:input_type -> google.protobuf.Empty
	2,  // 7: pudding.trigger.v1.CronTriggerService.FindOneByID:input_type -> pudding.trigger.v1.FindOneByIDRequest
	4,  // 8: pudding.trigger.v1.CronTriggerService.PageQuery:input_type -> pudding.trigger.v1.PageQueryRequest
	6,  // 9: pudding.trigger.v1.CronTriggerService.UpdateStatus:input_type -> pudding.trigger.v1.UpdateStatusRequest
	1,  // 10: pudding.trigger.v1.CronTriggerService.Ping:output_type -> pudding.trigger.v1.PingResponse
	3,  // 11: pudding.trigger.v1.CronTriggerService.FindOneByID:output_type -> pudding.trigger.v1.FindOneByIDResponse
	5,  // 12: pudding.trigger.v1.CronTriggerService.PageQuery:output_type -> pudding.trigger.v1.PageQueryResponse
	7,  // 13: pudding.trigger.v1.CronTriggerService.UpdateStatus:output_type -> pudding.trigger.v1.UpdateStatusResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_pudding_trigger_v1_cron_trigger_proto_init() }
func file_pudding_trigger_v1_cron_trigger_proto_init() {
	if File_pudding_trigger_v1_cron_trigger_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pudding_trigger_v1_cron_trigger_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pudding_trigger_v1_cron_trigger_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOneByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pudding_trigger_v1_cron_trigger_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOneByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pudding_trigger_v1_cron_trigger_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pudding_trigger_v1_cron_trigger_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pudding_trigger_v1_cron_trigger_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pudding_trigger_v1_cron_trigger_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pudding_trigger_v1_cron_trigger_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronTriggerTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pudding_trigger_v1_cron_trigger_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pudding_trigger_v1_cron_trigger_proto_goTypes,
		DependencyIndexes: file_pudding_trigger_v1_cron_trigger_proto_depIdxs,
		EnumInfos:         file_pudding_trigger_v1_cron_trigger_proto_enumTypes,
		MessageInfos:      file_pudding_trigger_v1_cron_trigger_proto_msgTypes,
	}.Build()
	File_pudding_trigger_v1_cron_trigger_proto = out.File
	file_pudding_trigger_v1_cron_trigger_proto_rawDesc = nil
	file_pudding_trigger_v1_cron_trigger_proto_goTypes = nil
	file_pudding_trigger_v1_cron_trigger_proto_depIdxs = nil
}
