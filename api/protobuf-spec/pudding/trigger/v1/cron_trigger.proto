syntax = "proto3";
package pudding.trigger.v1;
option go_package = "github.com/beihai0xff/pudding/api/gen/pudding/trigger/v1;trigger";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "pudding/trigger/v1/types.proto";

// The Pudding service definition.
service CronTriggerService {
  // FindOneByID find cron trigger by id
  rpc FindOneByID (FindOneByIDRequest) returns (CronFindOneByIDResponse) {
    option (google.api.http) = {
      get: "/pudding/trigger/cron/v1/find_one/{id}"
    };
  }

  // PageQueryTemplate page query cron trigger template
  rpc PageQueryTemplate (PageQueryTemplateRequest) returns (CronPageQueryResponse) {
    option (google.api.http) = {
      get: "/pudding/trigger/cron/v1/page_query/template/{offset}/{limit}/{status}"
    };
  }

  // Register create a cron trigger
  rpc Register (CronTriggerServiceRegisterRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/pudding/trigger/cron/v1/register"
      body: "*"
    };
  }

  // UpdateStatus update cron trigger status
  rpc UpdateStatus (UpdateStatusRequest) returns (UpdateStatusResponse) {
    option (google.api.http) = {
      post: "/pudding/trigger/cron/v1/update_status"
      body: "*"
    };
  }

}

// CronFindOneByIDRequest The FindOneByID Response message.
message CronFindOneByIDResponse {
  CronTriggerTemplate body = 1;
}

// CronPageQueryResponse PageQuery Response body
message CronPageQueryResponse {
  uint64 count = 1;
  repeated CronTriggerTemplate body = 2;
}

// CronRegisterRequest Register cron trigger template Request message.
message CronTriggerServiceRegisterRequest{
  string cron_expr = 1;
  string topic = 2;
  bytes payload = 3;
  google.protobuf.Timestamp excepted_end_time = 4;
  uint64 excepted_loop_times = 5;
}

