name: lint-and-test
on:
  push:
    tags:
      - v*
      - feat*
      - bug*
    branches:
      - v*
      - feat*
      - bug*
  pull_request:
    branches:
      - main
permissions:
  contents: read
  pull-requests: read
jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4.0.0
        with:
          go-version: 1.19
      - uses: actions/checkout@v3.3.0
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest
          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          args: --timeout=5m

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: false

          # Optional: if set to true then the action will use pre-installed Go.
          # skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
      - uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ github.token }}
      # Run lint only in the `proto` sub-directory
      - uses: bufbuild/buf-lint-action@v1
        with:
          input: api/protobuf-spec

  test:
    strategy:
      matrix:
        go-version: [1.19.x, 1.20.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.3.0
      - uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '2.15.1'
      - name: Install Go
        uses: actions/setup-go@v4.0.0
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
      - name: Cache image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: whoan
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: docker.pkg.github.com
          compose_file: ./test/docker-compose.yml
      - name: Init unittest environment
        run: make env/test
      - name: Run unittest
        run: make run/test
